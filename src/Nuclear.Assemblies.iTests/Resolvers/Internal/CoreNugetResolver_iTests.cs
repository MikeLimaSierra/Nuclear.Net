using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Reflection;

using Nuclear.Assemblies.ResolverData;
using Nuclear.Assemblies.Runtimes;
using Nuclear.TestSite;

namespace Nuclear.Assemblies.Resolvers.Internal {
    class CoreNugetResolver_iTests {

        #region Resolve

        [TestMethod("skip")]
        [TestData(nameof(Resolve_Data))]
        void Resolve(AssemblyName in1, IEnumerable<DirectoryInfo> in2, RuntimeInfo in3, VersionMatchingStrategies in4, VersionMatchingStrategies in5, IEnumerable<FileInfo> expected) {

            IEnumerable<FileInfo> files = default;

            Test.IfNot.Action.ThrowsException(() => files = new CoreNugetResolver().Resolve(in1, in2, in3, in4, in5), out Exception ex);

            Test.IfNot.Object.IsNull(files);
            Test.If.Enumerable.MatchesExactly(files, expected, Statics.FileInfoComparer);

        }

        IEnumerable<Object[]> Resolve_Data() {
            IEnumerable<DirectoryInfo> caches = new List<DirectoryInfo>() { Statics.FakeNugetCache };
            NugetResolver.TryGetPackage("Awesome.Nuget.Package", Statics.FakeNugetCache, out DirectoryInfo package);
            String packagePath = package.FullName;
            String arch = Environment.Is64BitProcess ? "x64" : "x86";

            return new List<Object[]>() {
                new Object[] { new AssemblyName("Awesome.Nuget.Package, Version=1.1.1.0, Culture=neutral, PublicKeyToken=null"), caches, new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 5)), Enumerable.Empty<FileInfo>() },
                new Object[] { new AssemblyName("Awesome.Nuget.Package, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"), caches, new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 5)), Enumerable.Empty<FileInfo>() },
                new Object[] { new AssemblyName("Awesome.Nuget.Package, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"), caches, new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 5)),
                    new List<FileInfo>() {
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                    } },
                new Object[] { new AssemblyName("Awesome.Nuget.Package, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"), caches, new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 6)),
                    new List<FileInfo>() {
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                    } },
                new Object[] { new AssemblyName("Awesome.Nuget.Package, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"), caches, new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 8)),
                    new List<FileInfo>() {
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "net48", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "net48", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch,"net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "net48", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "net48", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch,"net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "net48", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "net48", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch,"net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "net48", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "net48", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch,"net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "net48", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "net48", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "net48", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "net48", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                    } },
                new Object[] { new AssemblyName("Awesome.Nuget.Package, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"), caches, new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(1, 0)),
                    new List<FileInfo>() {
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                    } },
                new Object[] { new AssemblyName("Awesome.Nuget.Package, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"), caches, new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(2, 0)),
                    new List<FileInfo>() {
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                    } },
                new Object[] { new AssemblyName("Awesome.Nuget.Package, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"), caches, new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(3, 0)),
                    new List<FileInfo>() {
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netcoreapp3.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netcoreapp3.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netstandard2.1", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netstandard2.1", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netcoreapp3.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netcoreapp3.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netstandard2.1", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netstandard2.1", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netcoreapp3.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netcoreapp3.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netstandard2.1", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netstandard2.1", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netcoreapp3.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netcoreapp3.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard2.1", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard2.1", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netcoreapp3.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netcoreapp3.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netcoreapp3.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netcoreapp3.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard2.1", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard2.1", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard2.1", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard2.1", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                    } },

                new Object[] { new AssemblyName("Awesome.Nuget.Package, Version=2.1.1.0, Culture=neutral, PublicKeyToken=null"), caches, new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 5)), Enumerable.Empty<FileInfo>() },
                new Object[] { new AssemblyName("Awesome.Nuget.Package, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null"), caches, new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 5)),
                    new List<FileInfo>() {
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                    } },
                new Object[] { new AssemblyName("Awesome.Nuget.Package, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null"), caches, new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 6)),
                    new List<FileInfo>() {
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                    } },
                new Object[] { new AssemblyName("Awesome.Nuget.Package, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null"), caches, new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 8)),
                    new List<FileInfo>() {
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "net48", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "net48", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch,"net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "net48", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "net48", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch,"net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                    } },
                new Object[] { new AssemblyName("Awesome.Nuget.Package, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null"), caches, new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(1, 0)),
                    new List<FileInfo>() {
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                    } },
                new Object[] { new AssemblyName("Awesome.Nuget.Package, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null"), caches, new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(2, 0)),
                    new List<FileInfo>() {
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                    } },
                new Object[] { new AssemblyName("Awesome.Nuget.Package, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null"), caches, new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(3, 0)),
                    new List<FileInfo>() {
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netcoreapp3.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netcoreapp3.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netstandard2.1", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netstandard2.1", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netcoreapp3.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netcoreapp3.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netstandard2.1", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netstandard2.1", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                    } },

                new Object[] { new AssemblyName("Awesome.Nuget.Package, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null"), caches, new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 5)),
                    new List<FileInfo>() {
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                    } },
                new Object[] { new AssemblyName("Awesome.Nuget.Package, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null"), caches, new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 6)),
                    new List<FileInfo>() {
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                    } },
                new Object[] { new AssemblyName("Awesome.Nuget.Package, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null"), caches, new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 8)),
                    new List<FileInfo>() {
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "net48", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "net48", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch,"net46", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "net45", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                    } },
                new Object[] { new AssemblyName("Awesome.Nuget.Package, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null"), caches, new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(1, 0)),
                    new List<FileInfo>() {
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                    } },
                new Object[] { new AssemblyName("Awesome.Nuget.Package, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null"), caches, new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(2, 0)),
                    new List<FileInfo>() {
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                    } },
                new Object[] { new AssemblyName("Awesome.Nuget.Package, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null"), caches, new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(3, 0)),
                    new List<FileInfo>() {
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netcoreapp3.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netcoreapp3.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netstandard2.1", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netstandard2.1", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netcoreapp2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netstandard2.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netcoreapp1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netstandard1.0", "Awesome.Nuget.Package.dll")),
                        new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netstandard1.0", "Awesome.Nuget.Package.dll")),
                } },
            };
        }

        #endregion

        #region GetAssemblyCandidatesFromCache

        [TestMethod]
        [TestData(nameof(GetAssemblyCandidatesFromCache_Simple_Net_11xx_Data))]
        [TestData(nameof(GetAssemblyCandidatesFromCache_Simple_NetCore_11xx_Data))]
        [TestData(nameof(GetAssemblyCandidatesFromCache_Complex_Net_111x_Data))]
        [TestData(nameof(GetAssemblyCandidatesFromCache_Complex_Net_11xx_Data))]
        [TestData(nameof(GetAssemblyCandidatesFromCache_Complex_Net_1xxx_Data))]
        [TestData(nameof(GetAssemblyCandidatesFromCache_Complex_NetCore_1xxx_Data))]
        [TestData(nameof(GetAssemblyCandidatesFromCache_Complex_Net_211x_Data))]
        [TestData(nameof(GetAssemblyCandidatesFromCache_Complex_Net_21xx_Data))]
        [TestData(nameof(GetAssemblyCandidatesFromCache_Complex_NetCore_21xx_Data))]
        [TestData(nameof(GetAssemblyCandidatesFromCache_Complex_Net_311x_Data))]
        [TestData(nameof(GetAssemblyCandidatesFromCache_Complex_NetCore_311x_Data))]
        void GetAssemblyCandidatesFromCache(AssemblyName in1, DirectoryInfo in2, RuntimeInfo in3, VersionMatchingStrategies in4, VersionMatchingStrategies in5, IEnumerable<FileInfo> expected) {

            IEnumerable<INugetResolverData> files = default;
            RuntimesHelper.TryGetLoadableRuntimes(in3, out IEnumerable<RuntimeInfo> validRuntimes);

            Test.IfNot.Action.ThrowsException(() => files = CoreNugetResolver.GetAssemblyCandidatesFromCache(in1, in2, validRuntimes, in4, in5), out Exception ex);

            Test.IfNot.Object.IsNull(files);
            Test.If.Enumerable.MatchesExactly(files.Select(_ => _.File), expected, Statics.FileInfoComparer);

        }

        IEnumerable<Object[]> GetAssemblyCandidatesFromCache_Simple_Net_11xx_Data() {
            NugetResolver.TryGetPackage(Statics.SimpleFakePackageName, Statics.FakeNugetCache, out DirectoryInfo package);
            String packagePath = package.FullName;
            String arch = Environment.Is64BitProcess ? "x64" : "x86";

            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 6)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.Strict,
                Enumerable.Empty<FileInfo>() };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 6)),
                VersionMatchingStrategies.SemVer, VersionMatchingStrategies.Strict,
                Enumerable.Empty<FileInfo>() };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 6)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.SemVer,
                Enumerable.Empty<FileInfo>() };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 6)),
                VersionMatchingStrategies.SemVer, VersionMatchingStrategies.SemVer,
                Enumerable.Empty<FileInfo>() };

            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 8)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.Strict,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "net48", $"{package.Name}.dll")),
                } };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 8)),
                VersionMatchingStrategies.SemVer, VersionMatchingStrategies.Strict,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "net48", $"{package.Name}.dll")),
                } };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 8)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.SemVer,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "net48", $"{package.Name}.dll")),
                } };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 8)),
                VersionMatchingStrategies.SemVer, VersionMatchingStrategies.SemVer,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "net48", $"{package.Name}.dll")),
                } };
        }

        IEnumerable<Object[]> GetAssemblyCandidatesFromCache_Simple_NetCore_11xx_Data() {
            NugetResolver.TryGetPackage(Statics.SimpleFakePackageName, Statics.FakeNugetCache, out DirectoryInfo package);
            String packagePath = package.FullName;
            String arch = Environment.Is64BitProcess ? "x64" : "x86";

            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(2, 0)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.Strict,
                Enumerable.Empty<FileInfo>() };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(2, 0)),
                VersionMatchingStrategies.SemVer, VersionMatchingStrategies.Strict,
                Enumerable.Empty<FileInfo>() };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(2, 0)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.SemVer,
                Enumerable.Empty<FileInfo>() };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(2, 0)),
                VersionMatchingStrategies.SemVer, VersionMatchingStrategies.SemVer,
                Enumerable.Empty<FileInfo>() };

            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(3, 0)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.Strict,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                } };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(3, 0)),
                VersionMatchingStrategies.SemVer, VersionMatchingStrategies.Strict,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                } };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(3, 0)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.SemVer,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                } };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(3, 0)),
                VersionMatchingStrategies.SemVer, VersionMatchingStrategies.SemVer,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                } };

            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(5, 0)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.Strict,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                } };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(5, 0)),
                VersionMatchingStrategies.SemVer, VersionMatchingStrategies.Strict,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                } };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(5, 0)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.SemVer,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                } };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(5, 0)),
                VersionMatchingStrategies.SemVer, VersionMatchingStrategies.SemVer,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                } };

        }

        IEnumerable<Object[]> GetAssemblyCandidatesFromCache_Complex_Net_111x_Data() {
            NugetResolver.TryGetPackage(Statics.ComplexFakePackageName, Statics.FakeNugetCache, out DirectoryInfo package);
            String packagePath = package.FullName;
            String arch = Environment.Is64BitProcess ? "x64" : "x86";

            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.1.1.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 5)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.Strict,
                Enumerable.Empty<FileInfo>() };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.1.1.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 5)),
                VersionMatchingStrategies.SemVer, VersionMatchingStrategies.Strict,
                Enumerable.Empty<FileInfo>() };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.1.1.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 5)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.SemVer,
                Enumerable.Empty<FileInfo>() };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.1.1.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 5)),
                VersionMatchingStrategies.SemVer, VersionMatchingStrategies.SemVer,
                Enumerable.Empty<FileInfo>() };

        }

        IEnumerable<Object[]> GetAssemblyCandidatesFromCache_Complex_Net_11xx_Data() {
            NugetResolver.TryGetPackage(Statics.ComplexFakePackageName, Statics.FakeNugetCache, out DirectoryInfo package);
            String packagePath = package.FullName;
            String arch = Environment.Is64BitProcess ? "x64" : "x86";

            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 5)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.Strict,
                Enumerable.Empty<FileInfo>() };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 5)),
                VersionMatchingStrategies.SemVer, VersionMatchingStrategies.Strict,
                Enumerable.Empty<FileInfo>() };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 5)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.SemVer,
                Enumerable.Empty<FileInfo>() };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 5)),
                VersionMatchingStrategies.SemVer, VersionMatchingStrategies.SemVer,
                Enumerable.Empty<FileInfo>() };

        }

        IEnumerable<Object[]> GetAssemblyCandidatesFromCache_Complex_Net_1xxx_Data() {
            NugetResolver.TryGetPackage(Statics.ComplexFakePackageName, Statics.FakeNugetCache, out DirectoryInfo package);
            String packagePath = package.FullName;
            String arch = Environment.Is64BitProcess ? "x64" : "x86";

            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 5)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.Strict,
                Enumerable.Empty<FileInfo>() };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 5)),
                VersionMatchingStrategies.SemVer, VersionMatchingStrategies.Strict,
                Enumerable.Empty<FileInfo>() };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 5)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.SemVer,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                } };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 5)),
                VersionMatchingStrategies.SemVer, VersionMatchingStrategies.SemVer,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                } };

            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 6)),
                VersionMatchingStrategies.SemVer, VersionMatchingStrategies.SemVer,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                } };

            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 8)),
                VersionMatchingStrategies.SemVer, VersionMatchingStrategies.SemVer,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch,"net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch,"net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch,"net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch,"net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                } };

        }

        IEnumerable<Object[]> GetAssemblyCandidatesFromCache_Complex_NetCore_1xxx_Data() {
            NugetResolver.TryGetPackage(Statics.ComplexFakePackageName, Statics.FakeNugetCache, out DirectoryInfo package);
            String packagePath = package.FullName;
            String arch = Environment.Is64BitProcess ? "x64" : "x86";

            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(1, 0)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.Strict,
                Enumerable.Empty<FileInfo>() };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(1, 0)),
                VersionMatchingStrategies.SemVer, VersionMatchingStrategies.Strict,
                Enumerable.Empty<FileInfo>() };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(1, 0)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.SemVer,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                } };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(1, 0)),
                VersionMatchingStrategies.SemVer, VersionMatchingStrategies.SemVer,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                } };

            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(2, 0)),
                VersionMatchingStrategies.SemVer, VersionMatchingStrategies.SemVer,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                } };

            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(3, 0)),
                VersionMatchingStrategies.SemVer, VersionMatchingStrategies.SemVer,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                } };

            yield return new Object[] { new AssemblyName($"{package.Name}, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(5, 0)),
                VersionMatchingStrategies.SemVer, VersionMatchingStrategies.SemVer,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netcoreapp3.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netcoreapp3.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.3.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netcoreapp3.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netcoreapp3.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.2.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netcoreapp3.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netcoreapp3.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.1", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netcoreapp3.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netcoreapp3.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netcoreapp3.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netcoreapp3.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netcoreapp3.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netcoreapp3.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "1.1.0-beta+meta", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                } };

        }

        IEnumerable<Object[]> GetAssemblyCandidatesFromCache_Complex_Net_211x_Data() {
            NugetResolver.TryGetPackage(Statics.ComplexFakePackageName, Statics.FakeNugetCache, out DirectoryInfo package);
            String packagePath = package.FullName;
            String arch = Environment.Is64BitProcess ? "x64" : "x86";

            yield return new Object[] { new AssemblyName($"{package.Name}, Version=2.1.1.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 5)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.Strict,
                Enumerable.Empty<FileInfo>() };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=2.1.1.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 5)),
                VersionMatchingStrategies.SemVer, VersionMatchingStrategies.Strict,
                Enumerable.Empty<FileInfo>() };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=2.1.1.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 5)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.SemVer,
                Enumerable.Empty<FileInfo>() };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=2.1.1.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 5)),
                VersionMatchingStrategies.SemVer, VersionMatchingStrategies.SemVer,
                Enumerable.Empty<FileInfo>() };

        }

        IEnumerable<Object[]> GetAssemblyCandidatesFromCache_Complex_Net_21xx_Data() {
            NugetResolver.TryGetPackage(Statics.ComplexFakePackageName, Statics.FakeNugetCache, out DirectoryInfo package);
            String packagePath = package.FullName;
            String arch = Environment.Is64BitProcess ? "x64" : "x86";

            yield return new Object[] { new AssemblyName($"{package.Name}, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 5)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.Strict,
                Enumerable.Empty<FileInfo>() };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 5)),
                VersionMatchingStrategies.SemVer, VersionMatchingStrategies.Strict,
                Enumerable.Empty<FileInfo>() };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 5)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.SemVer,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                } };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 5)),
                VersionMatchingStrategies.SemVer, VersionMatchingStrategies.SemVer,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                } };

            yield return new Object[] { new AssemblyName($"{package.Name}, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 6)),
                VersionMatchingStrategies.SemVer, VersionMatchingStrategies.SemVer,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                } };

            yield return new Object[] { new AssemblyName($"{package.Name}, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 8)),
                VersionMatchingStrategies.SemVer, VersionMatchingStrategies.SemVer,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch,"net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch,"net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                } };

        }

        IEnumerable<Object[]> GetAssemblyCandidatesFromCache_Complex_NetCore_21xx_Data() {
            NugetResolver.TryGetPackage(Statics.ComplexFakePackageName, Statics.FakeNugetCache, out DirectoryInfo package);
            String packagePath = package.FullName;
            String arch = Environment.Is64BitProcess ? "x64" : "x86";

            yield return new Object[] { new AssemblyName($"{package.Name}, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(1, 0)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.Strict,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                } };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(2, 0)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.Strict,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                } };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(3, 0)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.Strict,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                } };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(5, 0)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.Strict,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netcoreapp3.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netcoreapp3.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.1", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netcoreapp3.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netcoreapp3.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "2.1.0", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                } };

        }

        IEnumerable<Object[]> GetAssemblyCandidatesFromCache_Complex_Net_311x_Data() {
            NugetResolver.TryGetPackage(Statics.ComplexFakePackageName, Statics.FakeNugetCache, out DirectoryInfo package);
            String packagePath = package.FullName;
            String arch = Environment.Is64BitProcess ? "x64" : "x86";

            yield return new Object[] { new AssemblyName($"{package.Name}, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 5)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.Strict,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                                        } };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 6)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.Strict,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                } };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETFramework, new Version(4, 8)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.Strict,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "net48", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch,"net46", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "net45", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                } };

        }

        IEnumerable<Object[]> GetAssemblyCandidatesFromCache_Complex_NetCore_311x_Data() {
            NugetResolver.TryGetPackage(Statics.ComplexFakePackageName, Statics.FakeNugetCache, out DirectoryInfo package);
            String packagePath = package.FullName;
            String arch = Environment.Is64BitProcess ? "x64" : "x86";

            yield return new Object[] { new AssemblyName($"{package.Name}, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(1, 0)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.Strict,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                } };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(2, 0)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.Strict,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                } };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(3, 0)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.Strict,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                } };
            yield return new Object[] { new AssemblyName($"{package.Name}, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null"), Statics.FakeNugetCache,
                new RuntimeInfo(FrameworkIdentifiers.NETCoreApp, new Version(5, 0)),
                VersionMatchingStrategies.Strict, VersionMatchingStrategies.Strict,
                new List<FileInfo>() {
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "net5.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netcoreapp3.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netcoreapp3.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netcoreapp3.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netstandard2.1", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netcoreapp2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netstandard2.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netcoreapp1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", "netstandard1.0", $"{package.Name}.dll")),
                    new FileInfo(Path.Combine(packagePath, "3.1.1", "lib", arch, "netstandard1.0", $"{package.Name}.dll")),
                } };

        }

        #endregion

        #region TryGetPackage

        [TestMethod]
        [TestData(nameof(TryGetPackage_Data))]
        void TryGetPackage(String input1, DirectoryInfo input2, Boolean expected, String dir) {

            Boolean result = default;
            DirectoryInfo _dir = default;

            Test.IfNot.Action.ThrowsException(() => result = CoreNugetResolver.TryGetPackage(input1, input2, out _dir), out Exception ex);

            Test.If.Value.IsEqual(result, expected);

            if(dir != null) {
                Test.If.Value.IsEqual(_dir.FullName, dir);

            } else {
                Test.If.Object.IsNull(_dir);
            }
        }

        IEnumerable<Object[]> TryGetPackage_Data() {
            DirectoryInfo cache = NugetResolver.GetCaches().First();

            return new List<Object[]>() {
                new Object[] { "microsoft.csharp", cache, true, Path.Combine(cache.FullName, "microsoft.csharp") },
                new Object[] { "netstandard.library", cache, true, Path.Combine(cache.FullName, "netstandard.library") },
                new Object[] { "non.existent.library", cache, false, null },
                new Object[] { "microsoft.csharp", new DirectoryInfo(@"C:\Temp\invalid\path"), false, null },
                new Object[] { Statics.SimpleFakePackageName, Statics.FakeNugetCache, true, Path.Combine(Statics.FakeNugetCache.FullName, Statics.SimpleFakePackageName) },
                new Object[] { Statics.ComplexFakePackageName, Statics.FakeNugetCache, true, Path.Combine(Statics.FakeNugetCache.FullName, Statics.ComplexFakePackageName) },
            };
        }

        #endregion

    }
}
